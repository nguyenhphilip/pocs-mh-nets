# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, plot = "area")
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "blue")
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green")
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootAlpha = 0.01)
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "orange")
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "yellow")
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "blue")
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F)
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F, area = T)
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F)
# plot significant differences between edges of bootstrapped samples (if 0 is in CI we know that the difference is not sig diff)
plot(thresheld_nets,
plot = "difference",
onlyNonZero = TRUE,
order = "sample")
corStability(boot_central[[6]], statistics = "all")
casedrop_centrality_p6
# plot the edge stability of the network
boot_edge_stab1 <- plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F)
png("boot_edge_stab1")
boot_edge_stab1
png("boot_edge_stab1.png")
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F,
filetype = "png",
filename = "y3-boot-edges")
# plot the edge stability of the network
plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F,
filetype = "png",
filename = "y3-boot-edges")
# plot the edge stability of the network
boot_edges_1 <- plot(boots[[6]], order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F)
ggsave("boot_edges_1.png", plot = boot_edges_1)
corStability(boot_central[[6]], statistics = "all")
# casedrop_centrality_p1 <- plot(boot_central[[1]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p2 <- plot(boot_central[[2]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p3 <- plot(boot_central[[3]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p4 <- plot(boot_central[[4]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p5 <- plot(boot_central[[5]], statistics = c("strength", "betweenness", "closeness"))
casedrop_centrality_p6 <- plot(boot_central[[6]], statistics = c("strength", "betweenness", "closeness"))
casedrop_centrality_p6
# casedrop_centrality_p1 <- plot(boot_central[[1]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p2 <- plot(boot_central[[2]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p3 <- plot(boot_central[[3]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p4 <- plot(boot_central[[4]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p5 <- plot(boot_central[[5]], statistics = c("strength", "betweenness", "closeness"))
casedrop_centrality_p6 <- plot(boot_central[[6]], statistics = c("strength"))
casedrop_centrality_p6
corStability(boot_central[[6]], statistics = "strength")
plot(casedrop_centrality_p6)
plot(boot_central[[6]]$sample)
# casedrop_centrality_p1 <- plot(boot_central[[1]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p2 <- plot(boot_central[[2]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p3 <- plot(boot_central[[3]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p4 <- plot(boot_central[[4]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p5 <- plot(boot_central[[5]], statistics = c("strength", "betweenness", "closeness"))
casedrop_centrality_p6 <- plot(boot_central[[6]], statistics = c("strength"))
ggsave("y3_casedrop_boot_centrality.png", plot = casedrop_centrality_p6)
ggsave("boot_edges_y3.png", plot = boot_edges_1)
centralityPlot(boot_central[[6]])
centralityPlot(boot_central[[6]]$sample)
labels
labels %>%
arrange(label)
centralityPlot(boot_central[[6]]$sample, include = "ExpectedInfluence")
centralityPlot(boot_central[[6]]$sample)
centralityPlot(boot_central[[6]]$boots)
centralityPlot(boot_central[[6]]$sample, decreasing = T)
labels %>%
arrange(label)
labs <- labels %>%
arrange(label)
centralityPlot(boot_central[[6]]$sample, decreasing = T, labels = labs$`short name`)
labs <- labels %>%
arrange(label)
labs
centralityPlot(boot_central[[6]]$sample, decreasing = T)
labs
centralityPlot(boot_central[[6]]$sample)
centralityPlot(boot_central[[6]]$sample, labels = labels$`short name`)
centralityPlot(boot_central[[6]]$sample)
centralityPlot(boot_central[[6]]$sample, labels = labels$label)
centralityPlot(boot_central[[6]]$sample, labels = labels$`short name`)
labels
labs <- labels %>%
mutate(lab_short = paste0(label,": ", `short name`))
labs
centralityPlot(boot_central[[6]]$sample, labels = labels$lab_short)
labs <- labels %>%
mutate(lab_short = paste0(label,": ", `short name`))
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short)
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short)
centrality_ploty3 <- centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short)
ggsave("centrality_plot_y3.png", centrality_ploty3)
thresheld_nets[[6]]
plot(thresheld_nets[[6]],
layout=L,
theme = "colorblind",
groups = labels$group,
nodeNames = labels$`short name`,
legend.cex = 0.4)
thresheld_nets[[6]]$results
thresheld_nets[[6]]
thresheld_nets[[6]]$intercepts
thresheld_nets[[6]]$labels
thresheld_nets[[6]]$nNode
thresheld_nets[[6]]$nPerson
thresheld_nets[[6]]$data
thresheld_nets[[6]]$thresholded
thresheld_nets[[6]]$graph
thresheld_nets[[6]]$estimator()
thresheld_nets[[6]]$weighted
thresheld_nets[[6]]$.input
centrality_ploty3
corStability(boot_central[[6]], statistics = "strength")
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, scale = "relative")
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, weighted = F)
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, weighted = T)
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short)
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, decreasing = T)
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, decreasing = F)
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, decreasing = T)
centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength")
centrality_ploty3 <- centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength")
ggsave("centrality_plot_y3.png", centrality_ploty3)
centrality_ploty3 <- centralityPlot(boot_central[[6]]$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength")
ggsave("centrality_plot_y3.png", centrality_ploty3)
# Youth report of functioning
bpm_y <- vroom::vroom("../ABCD4p0/1195092/abcd_bpm01.txt") %>%
# remove description
slice(-1)  %>%
# remove unnecessary columns
dplyr::select(-ends_with("_id"),
-"interview_date",
-"collection_title",
-"bpm_admin",
-"study_cohort_name") %>%
mutate(across(bpm_1_y:bpm_19_y, ~ as.numeric(.x))) %>%
mutate(bpm_4_14_y = bpm_4_y + bpm_14_y,
bpm_7_8_y = bpm_7_y + bpm_8_y) %>%
dplyr::select(-c(bpm_4_y, bpm_14_y, bpm_7_y, bpm_8_y)) %>%
mutate(across(bpm_1_y:bpm_7_8_y, ~ if_else(.x == 0, 0, 1), .names = "{.col}_bin"))
bpm_y %>%
group_by(eventname) %>%
count()
y3 <- bpm_y %>%
filter(eventname == "3_year_follow_up_y_arm_1") %>%
drop_na()
net_filter <- function(data){
d <- data %>%
dplyr::select(labels$abcd_code) %>%
data.table::setnames(old = labels$abcd_code, new = labels$label)
d
}
y3bin <- net_filter(y3)
y3net <- estimateNetwork(y3bin, default = "IsingFit")
y3bootnet <- bootnet(y3net, nBoots=500, nCores = 4)
save(y3bootnet, file="y3-bootstrapped-edges.RData")
plot(y3bootnet, order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F)
# plot the edge stability of the network
boot_edges_y3 <- plot(y3bootnet, order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F)
# boot_central <- lapply(nets, bootnet, nBoots = 250, nCores = 4, type = "case", statistics = c("strength", "betweenness", "closeness"))
save(y3_boot_central, file="y3_bootstrapped-centrality.RData")
# plot the edge stability of the network
boot_edges_y3 <- plot(y3bootnet, order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F)
ggsave("boot_edges_y3.png", plot = boot_edges_y3)
# remove edges with p-values > 0.01
y3_thresh_nets <- bootThreshold(y3bootnet, alpha = 0.01)
# thresheld_nets <- lapply(boots, bootThreshold, alpha=0.01)
save(y3_thresh_nets, file="y3-thresholded-nets.RData")
# case-drop bootstrap for correlation stability coefficients to determine stability of rank-order of centrality indices
y3_boot_central <- bootnet(y3bootnet, nBoots = 500, nCores = 4,  type = "case", statistics = c("strength"))
# case-drop bootstrap for correlation stability coefficients to determine stability of rank-order of centrality indices
y3_boot_central <- bootnet(y3net, nBoots = 500, nCores = 4,  type = "case", statistics = c("strength"))
y3_boot_central
# boot_central <- lapply(nets, bootnet, nBoots = 250, nCores = 4, type = "case", statistics = c("strength", "betweenness", "closeness"))
save(y3_boot_central, file="y3_bootstrapped-centrality.RData")
corStability(y3_boot_central, statistics = "strength")
# casedrop_centrality_p1 <- plot(boot_central[[1]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p2 <- plot(boot_central[[2]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p3 <- plot(boot_central[[3]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p4 <- plot(boot_central[[4]], statistics = c("strength", "betweenness", "closeness"))
# casedrop_centrality_p5 <- plot(boot_central[[5]], statistics = c("strength", "betweenness", "closeness"))
casedrop_centrality_y3 <- plot(y3_boot_central, statistics = c("strength"))
ggsave("y3_casedrop_boot_centrality.png", plot = casedrop_centrality_y3)
labs <- labels %>%
mutate(lab_short = paste0(label,": ", `short name`))
centralityPlot(casedrop_centrality_y3$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength")
centralityPlot(casedrop_centrality_y3, labels = labs$lab_short, decreasing = F, orderBy = "Strength")
casedrop_centrality_y3
centralityPlot(y3_boot_central, labels = labs$lab_short, decreasing = F, orderBy = "Strength")
centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength")
centrality_ploty3 <- centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength")
centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength", scale = "z-scores")
ggsave("centrality_plot_y3.png", centrality_ploty3)
y3_thresh_nets
plot(y3_thresh_nets,
layout=L,
theme = "colorblind",
groups = labels$group,
nodeNames = labels$`short name`,
legend.cex = 0.4)
y3_plot <- plot(y3_thresh_nets,
layout=L,
theme = "colorblind",
groups = labels$group,
nodeNames = labels$`short name`,
legend.cex = 0.4)
ggsave("y3-thresholded-net.png", plot = y3_thresh_nets)
y3_plot <- plot(y3_thresh_nets,
layout=L,
theme = "colorblind",
groups = labels$group,
nodeNames = labels$`short name`,
legend.cex = 0.4,
filetype = "png",
filename = "y3-thresholded-net.png")
y3_plot <- plot(y3_thresh_nets,
layout=L,
theme = "colorblind",
groups = labels$group,
nodeNames = labels$`short name`,
legend.cex = 0.4,
filetype = "png",
filename = "y3-thresholded-net")
y3_plot <- plot(y3_thresh_nets,
layout=L,
theme = "colorblind",
groups = labels$group,
nodeNames = labels$`short name`,
legend.cex = 0.4,
filetype = "png",
filename = "y3-thresholded-net")
ggsave("centrality_plot_y3.png", centrality_ploty3)
ggsave("y3_casedrop_boot_centrality.png", plot = casedrop_centrality_y3)
plot(y3_boot_central, statistics = c("strength"))
centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength", scale = "z-scores")
# plot the edge stability of the network
boot_edges_y3 <- plot(y3bootnet, order = "sample", label = FALSE, meanColor = "green", bootColor = "blue", panels = F)
ggsave("boot_edges_y3.png", plot = boot_edges_y3)
plot(y3_boot_central, statistics = c("strength"))
centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength", scale = "z-scores")
centrality_ploty3 <- centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength", scale = "z-scores")
ggsave("centrality_plot_y3.png", centrality_ploty3)
corStability(y3_boot_central, statistics = "strength")
labels
centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength", scale = "z-scores", signed = F)
centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, orderBy = "Strength", scale = "z-scores", signed = T)
centralityPlot(y3_boot_central$sample, labels = labs$lab_short, decreasing = F, scale = "z-scores")
knitr::opts_chunk$set(echo = TRUE)
library(bootnet)
library(tidyverse)
library(vroom)
library(qgraph)
library(patchwork)
rgamma(10000, 1e-3, 1e-3)
gam <- rgamma(10000, 1e-3, 1e-3)
library(ggplot2)
gam <- data.frame(x = rgamma(10000, 1e-3, 1e-3))
gam %>%
ggplot(aes(x = gam)) +
geom_density()
gam
gam
gam %>%
ggplot(aes(x = x)) +
geom_density()
gam <- data.frame(x = rgamma(10000, 1e3, 1e-3))
gam %>%
ggplot(aes(x = x)) +
geom_density()
gam <- data.frame(x = rgamma(10000, 1e3, 1e3))
gam %>%
ggplot(aes(x = x)) +
geom_density()
gam <- data.frame(x = rgamma(10000, 1e3, 1e3))
gam %>%
ggplot(aes(x = x)) +
geom_density()
gam <- data.frame(x = rgamma(10000, 1e3, 1e5))
gam %>%
ggplot(aes(x = x)) +
geom_density()
gam <- data.frame(x = rgamma(10000, 1e-1, 1e-1))
gam %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-1, 1e-5)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-1, 1e-2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-1, 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-1, 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-1, 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1, 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1, 1e1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1, 1e-1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1, 1e-2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e2, 1e2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e1, 1e2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e2, 1e2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e2, 1e-2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e2, 1e-1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e2, 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e2, 0.001)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e2, 1e2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-3, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-3, 1e-1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-3, 1e-2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-3, 1e-5)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-3, 1e-4)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-2, 1e-4)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-1, 1e-4)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e3)) %>%
ggplot(aes(x = x)) +
geom_density()
1e-3
data.frame(x = rgamma(10000, 1e3, 1e3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e4)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e4)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 5e3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 5e2)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 1e3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e3, 5e2)) %>%
ggplot(aes(x = x)) +
geom_density()
5e2
data.frame(x = rgamma(10000, 1000, 1000)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 10000, 10000)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1, 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e6, 1e6)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e5, 1e5)) %>%
ggplot(aes(x = x)) +
geom_density()
3.85771008e1
data.frame(x = rgamma(10000, 1e-3, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-3, 1e3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1, 1)) %>%
ggplot(aes(x = x)) +
geom_density()
?rgamma
?rgamma
data.frame(x = rgamma(10000, 1e-3, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, 1e-3, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(1000, 1e-3, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(1000, 1e5, 1e-3)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(1000, 1e5, 1e-5)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(10000, shape = 1e5, rate = 1e-5)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(10000, shape = 1e-3, rate = 1e-3)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(10000, shape = 1e-3, rate = 1e-3)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, shape = 1, rate = 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(10000, shape = 2, rate = 0.1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(100000, shape = 2, rate = 0.1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(100000, shape = 2, rate = 0.5)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(100000, shape = 2, rate = 0.1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(100000, shape = 1, rate = 1)) %>%
ggplot(aes(x = x)) +
geom_density()
data.frame(x = rgamma(100000, shape = 1, rate = 1)) %>%
ggplot(aes(x = x)) +
geom_point()
data.frame(x = rgamma(100000, shape = 1, rate = 1)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(100000, shape = 1e5, scale = 1e5)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(100000, shape = 1e5, rate = 1e-5)) %>%
ggplot(aes(x = x)) +
geom_histogram()
data.frame(x = rgamma(100000, shape = 1e5, rate = 1e-5)) %>%
ggplot(aes(x = x)) +
geom_histogram()
